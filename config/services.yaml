# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Exception,Form,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\CommandBus\Handler\:
          resource: '../src/CommandBus/Handler/*'
          tags: ['app.simple.command_handler']

    App\Service\CommandBus\SuperSimpleCommandBus:
        arguments: [!tagged app.simple.command_handler] #simplify it as possible (no custom Container Pass)

    App\Middleware\ResponseSubscriberMiddleware:
        bind:
          $apiVersion: '%env(resolve:API_VERSION)%'


    App\Form\VOType\PasswordHashType:
        tags: [form.type]

    # alias sf service to its interface
    Symfony\Component\Security\Http\AccessMapInterface: '@security.access_map'